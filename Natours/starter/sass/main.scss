$color-primary: #55c57a;
$color-primary-light: #7ed56f;
$color-primary-dark: #28b485;

$color-grey-dark: #777;
$color-white: #fff;

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box; /* box-sizing : border-box makes each box include margin and padding instead of adding to it. */
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7; /* 1.7 times bigger than the normal line height. */
  color: $color-grey-dark;
  padding: 30px;
}

.header {
  height: 95vh; /* Always 95% of View Height*/
  /* First image goes on top of the other*/
  background-image: linear-gradient(
      to right bottom,
      rgba($color-primary, 0.8),
      rgba($color-primary-dark, 0.8)
    ),
    url("../img/hero.jpg");
  background-size: cover; /*Always fit horizontal */
  background-position: top;
  position: relative;

  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  /* https://bennettfeely.com/clippy/ Can make cool shapes out of images */
}

.header__logo-box {
  position: absolute;
  top: 40px;
  left: 40px;
}

.header__logo {
  height: 35px;
}

.header__text-box {
  /* EASY way to CENTER on page */
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center; /* Works on inline or inline-block children elements! */
}

.heading-primary {
  color: $color-white;
  text-transform: uppercase;

  backface-visibility: hidden;
  /* back element not visable when transformed. Helps prevent shaking of other animations. */
  margin-bottom: 60px;
}

.heading-primary--main {
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;

  animation: moveInLeft 1s ease-out;

  /*
      animation-delay: 3s; //before it starts
      animation-iteration-count: 3; // number of times it will happen
  
    */
}

.heading-primary--sub {
  display: block; /* block, starts on a new line and takes up the whole width */
  font-size: 20px;
  font-weight: 700; /* When you bring in a font-family you can see all the available font-weights on the link */
  letter-spacing: 17.4px;

  animation-name: moveInRight;
  animation-duration: 1s;
  animation-timing-function: ease-out;
}

/* Animations!! */
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-100px);
  }

  80% {
    transform: translateX(20px);
    opacity: 0.5;
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(100px);
  }

  80% {
    transform: translateX(-20px);
    opacity: 0.5;
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(30px);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 15px 40px;
  display: inline-block; /* Always do inline-block when you want to give paddings or heights or widths to element  */
  border-radius: 100px;
  transition: all 0.2s; /* applys to all properties for translates etc */
  position: relative;
}

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}

.btn:active {
  transform: translateY(-1px); /* In relation to initial state not hover */
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
}

.btn--white {
  background-color: $color-white;
  color: $color-grey-dark;
}

.btn::after {
  content: ""; /* always need content and display!*/
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 100px;
  position: absolute; /*finds the next parent relative*/
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s;
  opacity: 0.5;
}

.btn--white::after {
  background-color: $color-white;
}

.btn:hover::after {
  transform: scaleX(1.2) scaleY(1.4);
  opacity: 0;
}

.btn--animated {
  animation: moveInBottom 0.5s ease-out 0.75s;
  animation-fill-mode: backwards; /* Intial animation styles will be applied before animation starts! */
}
